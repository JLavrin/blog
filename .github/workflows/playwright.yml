name: CI/CD Workflow

on:
  pull_request:
    branches:
      - main
jobs:
  install_and_build:
    runs-on: ubuntu-latest
    env:
      CI: true
      HUBSPOT_LEAD_FORM_ID: ${{ secrets.HUBSPOT_LEAD_FORM_ID }}
      HUBSPOT_API_URL: ${{ secrets.HUBSPOT_API_URL }}
      HUBSPOT_PORTAL_ID: ${{ secrets.HUBSPOT_PORTAL_ID }}
      DATOCMS_READONLY_TOKEN: ${{ secrets.DATOCMS_READONLY_TOKEN }}
      NEXT_DATOCMS_API_TOKEN: ${{ secrets.NEXT_DATOCMS_API_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2

        with:
          node-version: '20'
          cache: 'yarn'

      - name: copy .env file
        run: cp .env.example .env

      - name: copy secrets
        run: echo |
            ${{ secrets.HUBSPOT_LEAD_FORM_ID }} > .env.local
            ${{ secrets.HUBSPOT_API_URL }} > .env.local
            ${{ secrets.HUBSPOT_PORTAL_ID }} > .env.local
            ${{ secrets.DATOCMS_READONLY_TOKEN }} > .env.local
            ${{ secrets.NEXT_DATOCMS_API_TOKEN }} > .env.local

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

  lint:
    runs-on: ubuntu-latest

    needs: install_and_build
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint project
        run: yarn lint

  run_tests:
    runs-on: ubuntu-latest

    needs: lint
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests with Playwright
        run: yarn test

  deploy:
    runs-on: ubuntu-latest

    needs: run_tests
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Vercel
        run:  echo "Deploying to Vercel"
